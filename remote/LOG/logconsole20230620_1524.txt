[35m‚ö°[39m: Plugin [35mLoggerPlugin[39m enabled!
[35m‚ö°LoggerPlugin [39m: DEBUG SENDER: !! 8Ïõî 9ÏùºÏóê Ï∂úÎ∞úÌïòÎäî ÏùºÎ≥∏ Ìï≠Í≥µÍ∂å Í≤ÄÏÉâÌï¥Ï§ò
Error chatgpt api: Error: Request failed with status code 400
    at createError (C:\remote-kakao\node_modules\openai\node_modules\axios\lib\core\createError.js:16:15)
    at settle (C:\remote-kakao\node_modules\openai\node_modules\axios\lib\core\settle.js:17:12)
    at IncomingMessage.handleStreamEnd (C:\remote-kakao\node_modules\openai\node_modules\axios\lib\adapters\http.js:322:11)
    at IncomingMessage.emit (node:events:525:35)
    at endReadableNT (node:internal/streams/readable:1359:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [Function: httpAdapter],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    validateStatus: [Function: validateStatus],
    headers: {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'OpenAI/NodeJS/3.2.1',
      Authorization: 'Bearer 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',
      'OpenAI-Organization': 'org-5e0D8OxML0lQ1EQIJYbdVcxi',
      'Content-Length': 377
    },
    method: 'post',
    data: '{"model":"gpt-3.5-turbo-0613","messages":[{"role":"user","content":" 8Ïõî 9ÏùºÏóê Ï∂úÎ∞úÌïòÎäî ÏùºÎ≥∏ Ìï≠Í≥µÍ∂å Í≤ÄÏÉâÌï¥Ï§ò"}],"functions":[{"name":"websearch","description":"Ïù∏ÌÑ∞ÎÑ∑Ïóê Í≤ÄÏÉâÏùÑ ÏãúÎèÑÌï©ÎãàÎã§.","parameter":{"type":"object","properties":{"search_txt":{"type":"string","description":"Í≤ÄÏÉâÌï† Î¨∏Ïû•"}},"required":["search_txt"]}}],"function_call":"auto"}',
    url: 'https://api.openai.com/v1/chat/completions'
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: 377,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.openai.com',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 10,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.openai.com',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 369,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'POST /v1/chat/completions HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: OpenAI/NodeJS/3.2.1\r\n' +
      'Authorization: Bearer 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\r\n' +
      'OpenAI-Organization: org-5e0D8OxML0lQ1EQIJYbdVcxi\r\n' +
      'Content-Length: 377\r\n' +
      'Host: api.openai.com\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype],
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/v1/chat/completions',
    _ended: true,
    res: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: [TLSSocket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: [TLSSocket],
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'https://api.openai.com/v1/chat/completions',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 40,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'api.openai.com',
    protocol: 'https:',
    _redirectable: Writable {
      _writableState: [WritableState],
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 377,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.openai.com/v1/chat/completions',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kEndCalled)]: true,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      authorization: [Array],
      'openai-organization': [Array],
      'content-length': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 400,
    statusText: 'Bad Request',
    headers: {
      date: 'Tue, 20 Jun 2023 06:25:08 GMT',
      'content-type': 'application/json',
      'content-length': '164',
      connection: 'close',
      'access-control-allow-origin': '*',
      'openai-organization': 'user-kpdmgw4c2ibcbb7jdumbswmw',
      'openai-processing-ms': '334',
      'openai-version': '2020-10-01',
      'strict-transport-security': 'max-age=15724800; includeSubDomains',
      'x-ratelimit-limit-requests': '60',
      'x-ratelimit-limit-tokens': '150000',
      'x-ratelimit-remaining-requests': '59',
      'x-ratelimit-remaining-tokens': '149969',
      'x-ratelimit-reset-requests': '1s',
      'x-ratelimit-reset-tokens': '12ms',
      'x-request-id': '55162ff9921d5f2f303a614b46e52f86',
      'cf-cache-status': 'DYNAMIC',
      server: 'cloudflare',
      'cf-ray': '7da1eec8eb99c080-ICN',
      'alt-svc': 'h3=":443"; ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Function: httpAdapter],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: [Function: validateStatus],
      headers: [Object],
      method: 'post',
      data: '{"model":"gpt-3.5-turbo-0613","messages":[{"role":"user","content":" 8Ïõî 9ÏùºÏóê Ï∂úÎ∞úÌïòÎäî ÏùºÎ≥∏ Ìï≠Í≥µÍ∂å Í≤ÄÏÉâÌï¥Ï§ò"}],"functions":[{"name":"websearch","description":"Ïù∏ÌÑ∞ÎÑ∑Ïóê Í≤ÄÏÉâÏùÑ ÏãúÎèÑÌï©ÎãàÎã§.","parameter":{"type":"object","properties":{"search_txt":{"type":"string","description":"Í≤ÄÏÉâÌï† Î¨∏Ïû•"}},"required":["search_txt"]}}],"function_call":"auto"}',
      url: 'https://api.openai.com/v1/chat/completions'
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 377,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: [TLSSocket],
      _header: 'POST /v1/chat/completions HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: OpenAI/NodeJS/3.2.1\r\n' +
        'Authorization: Bearer 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\r\n' +
        'OpenAI-Organization: org-5e0D8OxML0lQ1EQIJYbdVcxi\r\n' +
        'Content-Length: 377\r\n' +
        'Host: api.openai.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/v1/chat/completions',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'api.openai.com',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kEndCalled)]: true,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kUniqueHeaders)]: null
    },
    data: { error: [Object] }
  },
  isAxiosError: true,
  toJSON: [Function: toJSON]
}
hello world
[35m‚ö°LoggerPlugin [39m: Î∞©Ïû•Î¥á: Ïò§ÎäòÏùÄ Ïó¨Í∏∞ÍπåÏßÄÎã§ Í∑∏ÏßÄ ÍπΩÍπΩÏù¥Îì§ÏïÑ
[35m‚ö°LoggerPlugin [39m: Ïò§ÌîàÏ±ÑÌåÖÎ¥á: ./finish
2
node-cron test2
Message {
  socket: Socket {
    _events: [Object: null prototype] { message: [Function (anonymous)] },
    _eventsCount: 1,
    _maxListeners: undefined,
    type: 'udp4',
    [Symbol(kCapture)]: false,
    [Symbol(async_id_symbol)]: 7,
    [Symbol(state symbol)]: {
      handle: [UDP],
      receiving: true,
      bindState: 2,
      connectState: 0,
      queue: undefined,
      reuseAddr: undefined,
      ipv6Only: undefined,
      recvBufferSize: undefined,
      sendBufferSize: undefined
    }
  },
  sessionEmitter: EventEmitter {
    _events: Events <[Object: null prototype] {}> {},
    _eventsCount: 0
  },
  remoteInfo: { address: '192.168.22.6', family: 'IPv4', port: 58836, size: 17737 },
  room: 'ÎÇòÎäîÏïºÌâÅÌâÅÏù¥',
  content: './finish',
  sender: { name: 'Ïò§ÌîàÏ±ÑÌåÖÎ¥á', getProfileImage: [Function: getProfileImage] },
  isGroupChat: true
}
ÏΩîÏä§Ìîº
[ 'ÏΩîÏä§Ìîº', '' ]
[ 'mJ', 'Sk', 'dE', 'Ol' ]
index
ÏΩîÏä§Îã•
[ 'ÏΩîÏä§Îã•', '' ]
[ 'wS', 'sc', 'yn', 'Sb' ]
index
ÏΩîÏä§Ìîº
[ 'ÏΩîÏä§Ìîº', '' ]
[ 'Jc', '3i', 'TP', 'Ie' ]
index
ÏΩîÏä§Îã•
[ 'ÏΩîÏä§Îã•', '' ]
[ '5M', '4Q', 'bC', '3V' ]
index
ÏΩîÏä§Ìîº
[ 'ÏΩîÏä§Ìîº', '' ]
[ 'ky', 'qh', 'q9', 'wr' ]
index
ÏΩîÏä§Îã•
[ 'ÏΩîÏä§Îã•', '' ]
[ 'zD', '0L', 'Hu', 'Tm' ]
index
ÏΩîÏä§Ìîº
[ 'ÏΩîÏä§Ìîº', '' ]
[ 'YT', '2x', 'H3', 'Pt' ]
index
ÏΩîÏä§Îã•
[ 'ÏΩîÏä§Îã•', '' ]
[ '4j', 'Ek', 'D3', '9t' ]
index
ÏΩîÏä§Ìîº
[ 'ÏΩîÏä§Ìîº', '' ]
[ 'GJ', '7D', 'q1', '8s' ]
index
ÏΩîÏä§Îã•
[ 'ÏΩîÏä§Îã•', '' ]
[ 'jo', 'mP', 'YZ', 'RG' ]
index
