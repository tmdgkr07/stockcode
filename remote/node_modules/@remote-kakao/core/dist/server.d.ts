/// <reference types="node" />
import EventEmitter from 'eventemitter3';
import Message from './message';
import RKPlugin from './plugin';
declare interface Server {
    on(event: 'ready', listener: (port: number) => void): this;
    on(event: 'message', listener: (message: Message) => void): this;
    on(event: string, listener: Function): this;
}
declare class Server extends EventEmitter {
    socket: import("dgram").Socket;
    private port;
    private sessionEmitter;
    private plugins;
    constructor();
    usePlugin(Plugin: new (server: Server, options?: Record<string, any>, ...args: any[]) => RKPlugin, pluginOptions?: Record<string, any>, enableLog?: boolean): RKPlugin;
    start(port?: number): Promise<void>;
}
export default Server;
