/// <reference types="node" />
import EventEmitter from 'eventemitter3';
import Message from './message';
declare interface Server {
    on(event: 'message', listener: (message: Message) => void): this;
    on(event: string, listener: Function): this;
}
declare class Server extends EventEmitter {
    socket: import("dgram").Socket;
    private port;
    private sessionEmitter;
    private kakaoLink?;
    constructor(config?: {
        useKakaoLink?: boolean;
    });
    start(port?: number, kakaoLinkConfig?: {
        email: string;
        password: string;
        key: string;
        host: string;
    }): Promise<void>;
}
export default Server;
